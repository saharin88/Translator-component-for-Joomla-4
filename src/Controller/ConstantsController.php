<?php

namespace Saharin\Component\Translator\Administrator\Controller;

use Joomla\CMS\Factory;
use Joomla\CMS\Language\Text;
use Joomla\CMS\MVC\Factory\MVCFactoryInterface;
use Joomla\CMS\Router\Route;
use Joomla\CMS\MVC\Controller\BaseController;
use Saharin\Component\Translator\Administrator\Model\ConstantModel;

class ConstantsController extends BaseController
{

	public function __construct(array $config = [], ?MVCFactoryInterface $factory = null)
	{
		parent::__construct($config, $factory);

		$this->registerTask('translateByGoogle', 'translate');
	}


	public function delete()
	{
		$this->checkToken('post', false) or die('Error Token');

		/** @var ConstantModel $model */
		$model = $this->getModel();
		$cid   = $this->input->get('cid', [], 'array');
		$file  = $this->input->get('file', null, 'raw');

		try
		{
			$model->delete($cid, $file);
			//$this->setMessage(Text::plural('COM_TRANSLATOR_N_ITEMS_DELETED', count($cid)));
		}
		catch (\Exception $e)
		{
			$this->setMessage($e->getMessage(), 'error');
		}

		$this->setRedirect(Route::_('index.php?option=com_translator&view=constants&file=' . $file, false));

		return true;

	}

	public function export()
	{
		$this->checkToken('post', false) or die('Error Token');

		$app = Factory::getApplication();

		/** @var ConstantModel $model */
		$model     = $this->getModel();
		$keys      = $this->input->get('cid', array(), 'array');
		$file      = $this->input->get('file', null, 'raw');
		$from_file = $this->input->get('from_file', null, 'raw');

		if (empty($keys))
		{
			$this->setRedirect(Route::_('index.php?option=com_translator&view=constants&file=' . $file, false), Text::_('JLIB_HTML_PLEASE_MAKE_A_SELECTION_FROM_THE_LIST'))->redirect();
		}

		if (empty($file))
		{
			$this->setRedirect(Route::_('index.php?option=com_translator&view=files', false), Text::_('COM_TRANSLATOR_EXPORT_EMPTY_FILE'))->redirect();
		}

		if (empty($from_file))
		{
			$this->setRedirect(Route::_('index.php?option=com_translator&view=constants&file=' . $file, false), Text::_('COM_TRANSLATOR_EXPORT_EMPTY_FROM_FILE'))->redirect();
		}

		try
		{
			$model->export($keys, $file, $from_file);
		}
		catch (\Exception $e)
		{
			$this->setMessage($e->getMessage(), 'error');
		}

		$this->setRedirect(Route::_('index.php?option=com_translator&view=constants&file=' . $file, false))->redirect();

	}

	public function translate()
	{

		$this->checkToken('post', false) or die('Error Token');

		/** @var ConstantModel $model */
		$model     = $this->getModel();
		$task      = $this->getTask();
		$cid       = $this->input->get('cid', [], 'array');
		$translate = $this->input->get('translate', [], 'array');
		$file      = $this->input->get('file', null, 'raw');

		try
		{
			if (empty($cid))
			{
				throw new \Exception(Text::_('JLIB_HTML_PLEASE_MAKE_A_SELECTION_FROM_THE_LIST'));
			}

			$model->$task($cid, $translate, $file);

		}
		catch (\Exception $e)
		{
			$this->setMessage($e->getMessage(), 'error');
		}

		$this->setRedirect(Route::_('index.php?option=com_translator&view=constants&file=' . $file, false))->redirect();

	}

	public function clearImported()
	{
		$this->checkToken('get', false) or die('Error Token');

		$file = $this->input->get('file', null, 'raw');

		Factory::getSession()->set($file, null, 'com_translator.imported');

		$this->setRedirect(Route::_('index.php?option=com_translator&view=constants&file=' . $file, false), Text::_('COM_TRANSLATOR_CLEAR_EXPORTED_SUCCESS'))->redirect();
	}

	public function getModel($name = 'Constant', $prefix = 'Administrator', $config = ['ignore_request' => true])
	{
		return parent::getModel($name, $prefix, $config); // TODO: Change the autogenerated stub
	}

}